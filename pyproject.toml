[project]
name = "orchestron"
version = "0.1.0"
description = "ML Pipeline Orchestrator"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "sqlalchemy>=2.0.41",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "nbconvert>=7.16.4",
    "pre-commit>=4.0.1",
    "pytest-mock>=3.14.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ty>=0.0.1a6",
]

[tool.uv]
package = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "BLE",  # flake8-blind-except
    "D",    # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "S",    # flake8-bandit
    "UP",   # pyupgrade
]
ignore = ["D203", "D212"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"tests/*" = ["S101", "D100", "D103"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ty.rules]
possibly-unresolved-reference = "warn"
unused-ignore-comment = "warn"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --strict-markers --cov --cov-report=term"
markers = [
    "local: marks tests as running locally only (deselect with '-m \"not local\"')"
]
xfail_strict = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
fail_under = 80
